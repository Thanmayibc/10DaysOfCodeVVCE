import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class Solution {
//Complete the countSort function below.
   
  static void countSort(List<List<String>> arr) {

    StringBuilder[] sb = new StringBuilder[100];
    for (int i = 0; i < 100; i++) {
      sb[i] = new StringBuilder();
    }

    HashMap<String, Integer> hm = new HashMap<String, Integer>();
    for (int i = 0; i <= 99; i++) {
      String s = Integer.toString(i);
      hm.put(s, i);
    }
    int index = 0;

    for (int i = 0; i < arr.size() / 2; i++) {
      index = hm.get(arr.get(i).get(0));
      sb[index].append("- ");
    }

    for (int i = arr.size() / 2; i < arr.size(); i++) {
      index = hm.get(arr.get(i).get(0));
      sb[index].append(arr.get(i).get(1) + " ");
    }

    StringBuilder result = new StringBuilder();
    for (int i = 0; i < 100; i++) {
      result.append(sb[i].toString());
    }

    String res = result.toString();
    System.out.println(res);
  }


  public static void main(String[] args) throws IOException {

    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

    int n = Integer.parseInt(bufferedReader.readLine().trim());

    StringBuilder[] sb = new StringBuilder[100];
    for (int i = 0; i < 100; i++) {
      sb[i] = new StringBuilder();
    }

    for (int i = 0; i < n / 2; i++) {
      String s = bufferedReader.readLine();
      String[] split = s.split(" ");
      int index = Integer.parseInt(split[0]);
      sb[index].append("- ");
    }

    for (int i = n / 2; i < n; i++) {
      String s = bufferedReader.readLine();
            String[] split = s.split(" ");
      int index = Integer.parseInt(split[0]);
      sb[index].append(split[1] + " ");
    }

    StringBuilder result = new StringBuilder();
    for (int i = 0; i < 100; i++) {
      result.append(sb[i].toString());
    }
    System.out.println(result.toString());
    bufferedReader.close();
  }
}
